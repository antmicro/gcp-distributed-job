name: workflow
on:
  push:
    paths-ignore:
      - 'last_zephyr_commit'
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
jobs:
  prepare-zephyr-0:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    env:
      ZEPHYR_COMMIT: 0
      ZEPHYR_SDK_VERSION: 0.14.2
    steps:
    - uses: actions/checkout@v2
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Download Zephyr
      run: ./scripts/download_zephyr.sh
    - name: Pass Zephyr as artifact
      uses: actions/upload-artifact@v2
      with:
        name: zephyr-0
        path: zephyr.tar.gz
  prepare-zephyr-1:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    env:
      ZEPHYR_COMMIT: 1
      ZEPHYR_SDK_VERSION: 0.14.2
    steps:
    - uses: actions/checkout@v2
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Download Zephyr
      run: ./scripts/download_zephyr.sh
    - name: Pass Zephyr as artifact
      uses: actions/upload-artifact@v2
      with:
        name: zephyr-1
        path: zephyr.tar.gz
  build-0-hello_world:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-0]
    env:
      SAMPLE_NAME: hello_world
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-0
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_hello_world_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-0-hello_world
        path: artifacts/
  simulate-0-hello_world:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-0-hello_world]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: hello_world
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-0-hello_world
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_hello_world_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-0-shell_module:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-0]
    env:
      SAMPLE_NAME: shell_module
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-0
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_shell_module_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-0-shell_module
        path: artifacts/
  simulate-0-shell_module:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-0-shell_module]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: shell_module
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-0-shell_module
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_shell_module_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-0-philosophers:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-0]
    env:
      SAMPLE_NAME: philosophers
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-0
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_philosophers_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-0-philosophers
        path: artifacts/
  simulate-0-philosophers:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-0-philosophers]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: philosophers
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-0-philosophers
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_philosophers_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-0-micropython:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-0]
    env:
      SAMPLE_NAME: micropython
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-0
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_micropython_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-0-micropython
        path: artifacts/
  simulate-0-micropython:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-0-micropython]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: micropython
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-0-micropython
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_micropython_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-0-tensorflow_lite_micro:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-0]
    env:
      SAMPLE_NAME: tensorflow_lite_micro
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-0
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_tensorflow_lite_micro_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-0-tensorflow_lite_micro
        path: artifacts/
  simulate-0-tensorflow_lite_micro:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-0-tensorflow_lite_micro]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: tensorflow_lite_micro
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-0-tensorflow_lite_micro
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_tensorflow_lite_micro_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-1-hello_world:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-1]
    env:
      SAMPLE_NAME: hello_world
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-1
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_hello_world_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-1-hello_world
        path: artifacts/
  simulate-1-hello_world:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-1-hello_world]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: hello_world
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-1-hello_world
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_hello_world_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-1-shell_module:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-1]
    env:
      SAMPLE_NAME: shell_module
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-1
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_shell_module_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-1-shell_module
        path: artifacts/
  simulate-1-shell_module:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-1-shell_module]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: shell_module
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-1-shell_module
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_shell_module_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-1-philosophers:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-1]
    env:
      SAMPLE_NAME: philosophers
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-1
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_philosophers_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-1-philosophers
        path: artifacts/
  simulate-1-philosophers:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-1-philosophers]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: philosophers
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-1-philosophers
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_philosophers_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-1-micropython:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-1]
    env:
      SAMPLE_NAME: micropython
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-1
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_micropython_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-1-micropython
        path: artifacts/
  simulate-1-micropython:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-1-micropython]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: micropython
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-1-micropython
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_micropython_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  build-1-tensorflow_lite_micro:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [prepare-zephyr-1]
    env:
      SAMPLE_NAME: tensorflow_lite_micro
      MICROPYTHON_VERSION: 97a7cc243b
      NUMBER_OF_THREADS: 32
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Get Zephyr
      uses: actions/download-artifact@v2
      with:
        name: zephyr-1
        path: zephyr-artifact
    - name: Prepare Zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare Micropython
      run: ./scripts/prepare_micropython.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py build start
    - name: Build boards
      run: ./scripts/build.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py build stop
        mv plot.png artifacts/build_tensorflow_lite_micro_plot.png
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-1-tensorflow_lite_micro
        path: artifacts/
  simulate-1-tensorflow_lite_micro:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [build-1-tensorflow_lite_micro]
    outputs:
      ZEPHYR_COMMIT: ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
    env:
      SAMPLE_NAME: tensorflow_lite_micro
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      NUMBER_OF_THREADS: 28
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
      GHA_MACHINE_TYPE: "n2-standard-32"
    steps:
    - uses: actions/checkout@v2
    - name: Get sargraph
      uses: actions/checkout@v2
      with:
        repository: antmicro/sargraph
        path: sargraph
        fetch-depth: 0
    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-1-tensorflow_lite_micro
        path: artifacts/
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Prepare Renode
      run: ./scripts/download_renode.sh
    - name: Start sargraph
      run: ./sargraph/sargraph.py simulate start
    - name: Simulate
      run: ./scripts/simulate.py
    - name: Stop sargraph
      run: |
        ./sargraph/sargraph.py simulate stop
        mv plot.png artifacts/simulate_tensorflow_lite_micro_plot.png
    - name: Get Zephyr commit
      id: get-zephyr-commit
      run: |
        ZEPHYR_COMMIT=$(cat artifacts/zephyr.version)
        echo "::set-output name=ZEPHYR_COMMIT::$ZEPHYR_COMMIT"
    - name: Install dependencies
      run: ./scripts/prepare_gcp.sh
    - name: Upload artifacts
      run: |
        mv artifacts/ ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }}
        gsutil cp -r ${{ steps.get-zephyr-commit.outputs.ZEPHYR_COMMIT }} gs://gcp-distributed-job-test-bucket
  results:
    container: ubuntu:jammy
    runs-on: [self-hosted, Linux, X64]
    needs: [simulate-0-hello_world, simulate-0-shell_module, simulate-0-philosophers, simulate-0-micropython, simulate-0-tensorflow_lite_micro, simulate-1-hello_world, simulate-1-shell_module, simulate-1-philosophers, simulate-1-micropython, simulate-1-tensorflow_lite_micro]
    if: always()
    steps:
    - uses: actions/checkout@v2
    - name: Delete artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: |
          zephyr-0
          zephyr-1
          build-0-hello_world
          build-0-shell_module
          build-0-philosophers
          build-0-micropython
          build-0-tensorflow_lite_micro
          build-1-hello_world
          build-1-shell_module
          build-1-philosophers
          build-1-micropython
          build-1-tensorflow_lite_micro
    - name: Update latest Zephyr commit
      run: echo ${{ needs.simulate-0-hello_world.outputs.ZEPHYR_COMMIT }} > last_zephyr_commit
    - name: Commit latest Zephyr commit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Update latest Zephyr commit ${{ needs.simulate-0-hello_world.outputs.ZEPHYR_COMMIT }}
        file_pattern: last_zephyr_commit