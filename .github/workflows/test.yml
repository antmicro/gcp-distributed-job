name: test
on: [push]

jobs:
  generate-sha:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.generate-sha.outputs.matrix }}
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y git
    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: zephyrproject-rtos/zephyr
        path: zephyr
        fetch-depth: 0
    - name: Generate matrix
      id: generate-sha
      run: |
        matrix=$(git -C zephyr log -n 1 --format='"%H",' | tr '\n' ' ')
        # Delete last character
        matrix='"62f19cc6b3d4697630abed9c5bea94d3a4eed7ed",'
        # Add [ ]
        matrix="[${matrix}]"
        echo "::set-output name=matrix::$matrix"
        echo "matrix: $matrix"
  build:
    runs-on: ubuntu-20.04
    needs: [generate-sha]
    strategy:
      matrix:
        SHA: ${{ fromJson(needs.generate-sha.outputs.matrix) }}
        sample: [hello_world, shell_module, philosophers, micropython, tensorflow_lite_micro]
      fail-fast:
        false
    env:
      ZEPHYR_SDK_VERSION: 0.14.2
      ZEPHYR_COMMIT: ${{ matrix.SHA }}
      FORCE_BUILD: true
      SAMPLE_NAME: ${{ matrix.sample }}
      MICROPYTHON_VERSION: 97a7cc243b028833bdcb8ce0bc19b2bce7545851
    steps:
    - uses: actions/checkout@v2
    - name: Prepare zephyr
      run: ./scripts/prepare_zephyr.sh
    - name: Prepare micropython
      run: ./scripts/prepare_micropython.sh
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - name: Build boards
      run: ./scripts/build.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.SHA }}
        path: artifacts/
  simulate:
    runs-on: ubuntu-20.04
    needs: [generate-sha, build]
    strategy:
      fail-fast: false
      matrix:
        SHA: ${{ fromJson(needs.generate-sha.outputs.matrix) }}
        sample: [hello_world, shell_module, philosophers, micropython, tensorflow_lite_micro]
    env:
      RENODE_VERSION: 1.13.1+20220731git8eca7310
      MICROPYTHON_VERSION: 97a7cc243b028833bdcb8ce0bc19b2bce7545851
      ZEPHYR_SDK_VERSION: 0.14.2
      ZEPHYR_COMMIT: ${{ matrix.SHA }}
      SAMPLE_NAME: ${{ matrix.sample }}
      FORCE_SIM: true
    steps:
    - uses: actions/checkout@v2
    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.SHA }}
        path: artifacts/
    - name: Prepare micropython
      run: ./scripts/prepare_micropython.sh
    - name: Prepare environment
      run: ./scripts/prepare_environment.sh
    - run: ./scripts/download_renode.sh
    - run: ./scripts/simulate.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.SHA }}
        path: artifacts/
  results:
    runs-on: ubuntu-20.04
    needs: [simulate]
    env:
      GHA_SA: "gh-sa-gcp-distributed-job-buck"
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        path: results/
    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y curl gnupg
    - run: ls -la results
    - name: Find artifacts that are no longer needed
      id: get-artifacts-to-delete
      run: |
        artifacts=$(find ./results -type d -name '*.txt' -exec basename {} \;)
        echo $artifacts
        artifacts="${artifacts//'%'/'%25'}"
        artifacts="${artifacts//$'\n'/'%0A'}"
        artifacts="${artifacts//$'\r'/'%0D'}"
        echo ::set-output name=artifacts::$artifacts
        echo $artifacts
    - name: Delete Old Artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: ${{ steps.get-artifacts-to-delete.outputs.artifacts }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: result
        path: results
